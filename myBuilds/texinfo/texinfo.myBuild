#!/bin/sh
actualname="texinfo"
version="6.7"
filename="${actualname}-${version}"
extension=".tar.gz"
source="http://ftp.gnu.org/gnu/texinfo/${filename}${extension}"
sumUrl=""

#functions

do_get(){
	"${myBuildHelpersDir}"/myBuildGet.sh "${source}" "${myBuildSourceDest}"
	return "$?"
}

do_extract(){
	"${myBuildHelpersDir}"/myBuildExtract.sh "${myBuildSourceDest}/${filename}${extension}" "${myBuildExtractDest}"
	return "$?"
}

do_build(){
#here you put commands like configure and make

cd "${myBuildExtractDest}/${filename}"

OLD_LD_LIBRARY_PATH="$LD_LIBRARY_PATH"

if [ "$(printf "%s\n" "${TARGET}" | cut -d "-" -f 3 | cut -c 1-7)" != "mingw32" ]; then
	CC="${TARGET}-gcc --sysroot=${TEMP_SYSROOT}" ./configure --prefix="${PREFIX}/${TARGET}" --build=${BUILD} --host=${HOST} --target=${TARGET} --disable-perl-xs
else

	#fix HOST_IS_WINDOWS_* variables so that mingw version can build
	sed -i "s/HOST_IS_WINDOWS_TRUE=/HOST_IS_WINDOWS_TRUE='#'/g" configure
	sed -i "s/HOST_IS_WINDOWS_FALSE=/HOST_IS_WINDOWS_FALSE='#'/g" configure
	sed -i "s/HOST_IS_WINDOWS_FALSE='#''#'/HOST_IS_WINDOWS_FALSE=/g" configure
	sed -i "s/HOST_IS_WINDOWS_TRUE='#''#'/HOST_IS_WINDOWS_TRUE=/g" configure

	sed -i "s#CC=\"\$BUILD_CC\"#CC=\"\$BUILD_CC\" CPPFLAGS=\"-I${TEMP_SYSROOT}${PREFIX}/${BUILD}/include\" LDFLAGS=\"-L${TEMP_SYSROOT}${PREFIX}/${TARGET}/lib -L${TEMP_SYSROOT}${PREFIX}/${BUILD}/lib\"#g" configure

	if [ "$(printf "%s\n" "${BUILD}" | cut -d "-" -f 3 | cut -c 1-7)" != "mingw32" ]; then
		export LD_LIBRARY_PATH="${TEMP_SYSROOT}${PREFIX}/${BUILD}/lib:$LD_LIBRARY_PATH"
	else
		export LD_LIBRARY_PATH="${TEMP_SYSROOT}${PREFIX}/${BUILD}/lib;$LD_LIBRARY_PATH"
	fi

	CC="${TARGET}-gcc --sysroot=${TEMP_SYSROOT}" ./configure --prefix="${PREFIX}/${TARGET}" --build=${BUILD} --host=${HOST} --target=${TARGET} --disable-perl-xs PERL="${PERL}"

echo "${PERL}<<<<<"

fi

make DESTDIR=${SYSROOT}

export LD_LIBRARY_PATH="$OLD_LD_LIBRARY_PATH"
return "$?"
}

do_install(){
#here you put the installation commands, like make install
cd "${myBuildExtractDest}/${filename}"
make install DESTDIR=${SYSROOT}

if [ "$(printf "%s\n" "${TARGET}" | cut -d "-" -f 3 | cut -c 1-7)" = "mingw32" ]; then
#symlinks are not supported on windoze so make a hardlink to texi2any for makeinfo
cd "${SYSROOT}${PREFIX}/${TARGET}/bin"
rm makeinfo
$MYIXOS_LINK texi2any makeinfo
fi
return "$?"
}

do_package(){
#here you package the files
cp -a "${myBuildHome}"/myBuilds/${actualname}/${actualname}.control "${CONTDIR}/control"
printf "Architecture: %s\n" "$(printf "%s\n" "${TARGET}" | cut -d "-" -f 1-2)" >> "${CONTDIR}/control"

printf "2.0" > "${BUILDDIR}/debian-binary"

cd "${CONTDIR}"
tar --numeric-owner --group=0 --owner=0 -cf "${BUILDDIR}/control.tar" ./*

cd "${SYSROOT}"
tar --numeric-owner --group=0 --owner=0 -cf "${BUILDDIR}/data.tar" ./*

cd "${BUILDDIR}"
ar r "${PKGDIR}/${actualname}_${version}.$(printf "%s" "${TARGET}" | cut -d "-" -f 1-2).deb" ./debian-binary ./control.tar ./data.tar

rm -rf "${CONTDIR}"
rm -rf "${SYSROOT}"
mkdir -p "${CONTDIR}"
mkdir -p "${SYSROOT}"
rm -f "${BUILDDIR}/debian-binary"
rm -f "${BUILDDIR}/control.tar"
rm -f "${BUILDDIR}/data.tar"

cd "${myBuildHome}"
return "$?"
}

if [ "$myBuildDoNotCallMainFunction" != "1" ]; then
#main code goes here
"${myBuildHelpersDir}"/argumentHelper.sh "$1" "$0"
fi