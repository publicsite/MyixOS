#!/bin/sh
version="5.28.1"
filename="perl-${version}"
filename1="perl-cross-1.3"
extension=".tar.gz"
source="http://www.cpan.org/src/5.0/${filename}${extension}"
sumUrl=""

#functions

do_get(){
	mkdir "${myBuildSourceDest}/perl"
	if [ "$?" != "0" ]; then return 1; fi #check for errors
	"${myBuildHelpersDir}"/myBuildGet.sh "${source}" "${myBuildSourceDest}/perl"
	if [ "$?" != "0" ]; then return 1; fi #check for errors
	return "$?"
}

do_extract(){
	mkdir "${myBuildExtractDest}/perl"
	if [ "$?" != "0" ]; then return 1; fi #check for errors
	"${myBuildHelpersDir}"/myBuildExtract.sh "${myBuildSourceDest}/perl/${filename}${extension}" "${myBuildExtractDest}/perl"
	if [ "$?" != "0" ]; then return 1; fi #check for errors
	return "$?"
}

do_build(){
#here you put commands like configure and make

cd "${myBuildExtractDest}/perl/${filename}/win32"

if [ "$BITS" = "64" ]; then
echo
make INST_TOP="${PREFIX}/${TARGET}"  USE_64_BIT_INT=define
else
#we assume make is installed in the same directory as i686-w64-mingw32-gcc
gmakePath="$(printf "%s/make.exe" "$(dirname $(which i686-w64-mingw32-gcc))" | sed "s#/#\\\\\\\#g")"
sed -i "s#gmake#${gmakePath}#g" GNUmakefile
sed -i "s#GCCBIN := gcc#GCCBIN := i686-w64-mingw32-gcc#g" GNUmakefile
make -f GNUmakefile \
	INST_TOP="$(printf "%s%s/%s" "${SYSROOT}" "${PREFIX}" "${TARGET}" | sed "s#/#\\\#g")" \
	CCHOME="$(realpath "$(dirname "$(which i686-w64-mingw32-gcc)")/../.." | sed "s#/#\\\#g")" \

fi

return "$?"
}

do_install(){
#here you put the installation commands, like make install

cd "${myBuildExtractDest}/perl/${filename}/win32"
make -f GNUmakefile \
	INST_TOP="$(printf "%s%s/%s" "${SYSROOT}" "${PREFIX}" "${TARGET}" | sed "s#/#\\\#g")" \
	CCHOME="$(realpath "$(dirname "$(which i686-w64-mingw32-gcc)")/../.." | sed "s#/#\\\#g")" \
	install

printf "%s" "${version}" > "${myBuildExtractDest}/perl/perl_version.txt"

return "$?"
}

do_package(){
#here you package the files
echo "package!"
return "$?"
}

if [ "$myBuildDoNotCallMainFunction" != "1" ]; then
#main code goes here
"${myBuildHelpersDir}"/argumentHelper.sh "$1" "$0"
fi