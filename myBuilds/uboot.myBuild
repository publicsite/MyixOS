#!/bin/sh
filename="binutils-2.30"
extension=".tar.gz"
source="http://ftp.gnu.org/gnu/binutils/${filename}${extension}"
sumUrl=""

#functions

do_get(){
	"${myBuildHelpersDir}"/myBuildGet.sh "${source}" "${myBuildSourceDest}"
	return "$?"
}

do_extract(){
	"${myBuildHelpersDir}"/myBuildExtract.sh "${myBuildSourceDest}/${filename}${extension}" "${myBuildExtractDest}"
	return "$?"
}

do_build(){
echo "TARGET>>>$TARGET"
#here you put commands like configure and make

cd ${myBuildExtractDest}/${filename}
if [ "$?" != "0" ]; then return 1; fi #check for errors

printf "\n\n==Running configure.==\n\n"

./configure \
	--build=$BUILD \
	--prefix=$PREFIX \
	--host=$TARGET \
	--target=$TARGET \
	--enable-languages=c,c++ \
	--enable-cxx \
	--enable-threads \
	--enable-64-bit-bfd \
	${CONFIG_EXTRA}
if [ "$?" != "0" ]; then return 1; fi #check for errors
#	    --with-sysroot=$ROOTFS \
#	    $WITHPPL \

printf "\n\n==Running make.==\n\n"

make
if [ "$?" != "0" ]; then return 1; fi #check for errors

make install
if [ "$?" != "0" ]; then return 1; fi #check for errors

return "$?"
}

do_install(){
#here you put the installation commands, like make install
echo "install!"
return "$?"
}

do_package(){
#here you package the files
echo "package!"
return "$?"
}

if [ "$myBuildDoNotCallMainFunction" != "1" ]; then
#main code goes here
"${myBuildHelpersDir}"/argumentHelper.sh "$1" "$0"
fi
