#!/bin/sh
filename="zlib-1.2.11"
extension=".tar.xz"
#get from this location on the zlib site, because that's easier for maintinance
source="http://zlib.net/${filename}${extension}"
sumUrl=""

#functions

checkResultLibDir(){
#this function checks if the file exists given the user input as argument 1

	if [ "$(find . -name libc.so.* | cut -d "/" -f 2 | while read line; do if [ "$1" = "$line" ]; then printf "yes\n"; fi; done)" = "yes" ]; then
		return 0
	else
		return 101
	fi
}

do_get(){
	"${myBuildHelpersDir}"/myBuildGet.sh "${source}" "${myBuildSourceDest}"
	return "$?"
}

do_extract(){
	"${myBuildHelpersDir}"/myBuildExtract.sh "${myBuildSourceDest}/${filename}${extension}" "${myBuildExtractDest}"
	return "$?"
}

do_build(){

cd ${SYSROOT}/lib

while true; do
	printf "\n\n==TYPE THE LIB DIR==\n\n"

	find . -name libc.so.* | cut -d "/" -f 2

	read theLibDir

	checkResultLibDir "$theLibDir"

	if [ "$?" = "0" ]; then
		break
	fi
done

#here you put commands like configure and make

cd "${myBuildExtractDest}/${filename}"

CROSS_PREFIX="${TARGET}-" ./configure --prefix=${PREFIX} --libdir=${SYSROOT}/lib/$theLibDir"

make DESTDIR=${SYSROOT}
return "$?"
}

do_install(){
#here you put the installation commands, like make install
cd "${myBuildExtractDest}/${filename}"
make install DESTDIR=${SYSROOT}
return "$?"
}

do_package(){
#here you package the files
echo "package!"
return "$?"
}

if [ "$myBuildDoNotCallMainFunction" != "1" ]; then
#main code goes here
"${myBuildHelpersDir}"/argumentHelper.sh "$1" "$0"
fi