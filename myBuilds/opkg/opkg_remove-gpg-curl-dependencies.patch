--- configure.ac.old	2020-02-24 02:47:29.000000000 +0000
+++ configure.ac	2020-02-24 03:06:40.053503917 +0000
@@ -51,17 +51,6 @@
 fi
 AM_CONDITIONAL(HAVE_PATHFINDER, test "x$want_pathfinder" = "xyes")
 
-# check for libcurl
-AC_ARG_ENABLE(curl,
-              AC_HELP_STRING([--enable-curl], [Enable downloading with curl
-      [[default=yes]] ]),
-    [want_curl="$enableval"], [want_curl="yes"])
-
-if test "x$want_curl" = "xyes"; then
-  PKG_CHECK_MODULES(CURL, [libcurl])
-  AC_DEFINE(HAVE_CURL, 1, [Define if you want CURL support])
-fi
-
 # check for sha256
 AC_ARG_ENABLE(sha256,
               AC_HELP_STRING([--enable-sha256], [Enable sha256sum check
@@ -93,18 +82,6 @@
   NEED_SSL_LIBS="yes"
 fi
 
-# check for libssl-curl
-AC_ARG_ENABLE(ssl-curl,
-              AC_HELP_STRING([--enable-ssl-curl], [Enable certificate authentication with curl
-                              [[default="yes"]] ]),
-                              [want_sslcurl="$enableval"], [want_sslcurl="yes"])
-
-if test "x$want_curl" = "xyes" -a "x$want_sslcurl" = "xyes"; then
-  AC_DEFINE(HAVE_CURL, 1, [Define if you want CURL support])
-  AC_DEFINE(HAVE_SSLCURL, 1, [Define if you want certificate authentication with curl])
-  NEED_SSL_LIBS="yes"
-fi
-
 if test "x$NEED_SSL_LIBS" = "xyes"; then
   AC_MSG_CHECKING([if openssl is available])
 
@@ -129,68 +106,6 @@
   AC_SUBST(OPENSSL_LIBS)
 fi
 
-
-dnl **********
-dnl GPGME
-dnl **********
-
-AC_ARG_ENABLE(gpg,
-    AC_HELP_STRING([--enable-gpg], [Enable signature checking with gpgme
-      [[default=yes]] ]),
-    [want_gpgme="$enableval"], [want_gpgme="yes"])
-
-if test "x$want_gpgme" = "xyes"; then
-  ok="no"
-  min_gpgme_version=1.0.0
-  AC_PATH_PROG(GPGME_CONFIG, gpgme-config, "failed")
-  if test $GPGME_CONFIG != "failed" ; then
-	AC_MSG_CHECKING(for GPGME - version >= $min_gpgme_version)
-	req_major=`echo $min_gpgme_version | \
-		   sed 's/\([[0-9]]*\)\.\([[0-9]]*\)\.\([[0-9]]*\)/\1/'`
-	req_minor=`echo $min_gpgme_version | \
-		   sed 's/\([[0-9]]*\)\.\([[0-9]]*\)\.\([[0-9]]*\)/\2/'`
-	req_micro=`echo $min_gpgme_version | \
-		   sed 's/\([[0-9]]*\)\.\([[0-9]]*\)\.\([[0-9]]*\)/\3/'`
-	gpgme_config_version=`$GPGME_CONFIG --version`
-	major=`echo $gpgme_config_version | \
-		   sed 's/\([[0-9]]*\)\.\([[0-9]]*\)\.\([[0-9]]*\).*/\1/'`
-	minor=`echo $gpgme_config_version | \
-		   sed 's/\([[0-9]]*\)\.\([[0-9]]*\)\.\([[0-9]]*\).*/\2/'`
-	micro=`echo $gpgme_config_version | \
-		   sed 's/\([[0-9]]*\)\.\([[0-9]]*\)\.\([[0-9]]*\).*/\3/'`
-
-	  if test "$major" -eq "$req_major"; then
-	     if test "$minor" -ge "$req_minor"; then
-	       if test "$micro" -ge "$req_micro"; then
-		 ok="yes"
-	       fi
-	     fi
-	  fi
-  fi
-
-  if test $ok = "yes"; then
-    GPGME_CFLAGS=`$GPGME_CONFIG --cflags`
-    GPGME_LIBS=`$GPGME_CONFIG --libs`
-    AC_MSG_RESULT(yes)
-    AC_DEFINE(HAVE_GPGME, 1, [Define if you want GPG support])
-  else
-    AC_MSG_ERROR(GPGME $min_gpgme_version or later needed)
-  fi
-fi
-
-AC_ARG_ENABLE(usign,
-    AC_HELP_STRING([--enable-usign], [Enable signature checking with usign
-      [[default=yes]] ]),
-    [want_usign="$enableval"], [want_usign="yes"])
-
-if test "x$want_usign" = "xyes"; then
-  AC_DEFINE(HAVE_USIGN, 1, [Define if you want usign support])
-fi
-
-AC_SUBST(GPGME_CFLAGS)
-AC_SUBST(GPGME_LIBS)
-
-
 # Checks for header files
 AC_HEADER_DIRENT
 AC_HEADER_STDC
@@ -277,16 +192,6 @@
         opkglockfile=${opkglibdir}/opkg/lock
 fi
 
-dnl Some special cases for the wow64 build
-if test "x$want_gpgme" = "xyes"
-then
-	if test "x$want_openssl" = "xyes"
-	then
-	AC_MSG_ERROR([--enable-gpg and --enable-openssl are mutually exclusive.
-Use --disable-gpg if you want OpenSSL smime signatures])
-	fi
-fi
-
 CLEAN_DATE=`date +"%B %Y" | tr -d '\n'`
 
 AC_SUBST(opkglibdir)
